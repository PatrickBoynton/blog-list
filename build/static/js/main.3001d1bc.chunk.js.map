{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","isToggled","title","blog","handleClick","bind","this","setState","posts","index","map","post","data-value","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAiEeA,E,kDA7Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,WAAW,EAAOC,MAAO,GAAIC,KAAM,IACjD,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,qDAMnB,WAgBEC,KAAKC,SAAS,CAACC,MAfD,CACZ,CACEN,MAAO,mBACPC,KAAM,UAER,CACED,MAAO,yBACPC,KAAM,UAER,CACED,MAAO,6BACPC,KAAM,e,yBAOZ,SAAYM,GAEVH,KAAKC,SAAS,CAACN,WAAYK,KAAKN,MAAMC,UAAWC,MAAOI,KAAKN,MAAMQ,MAAMC,GAAOP,MAAOC,KAAMG,KAAKN,MAAMQ,MAAMC,GAAON,S,oBAGvH,WAAU,IAAD,SAEDK,EAAK,UAAGF,KAAKN,MAAMQ,aAAd,aAAG,EAAkBE,KAAI,SAACC,EAAMF,GAAP,OAClC,6BACI,oBAAIG,aAAYH,EAAOI,QAAS,kBAAM,EAAKT,YAAYK,IAAvD,SAAgEE,EAAKT,SADhEO,MAIX,OAEE,cADA,CACA,sBAGIH,KAAKN,MAAMC,UAEX,6BACE,+BACA,6BAAKK,KAAKN,MAAME,QAChB,4BAAII,KAAKN,MAAMG,YAIjB,KAEF,6BACKK,W,GAvDKM,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3001d1bc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggled: false, title: \"\", blog: \"\"};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const posts = [\n      {\n        title: \"Fun thing ahead!\",\n        blog: \"Post 1\"\n      },\n      {\n        title: \"More fun things ahead!\",\n        blog: \"Post 2\"\n      },\n      {\n        title: \"Yet more fun things ahead!\",\n        blog: \"Post 3\"\n      }\n    ]\n\n    this.setState({posts});\n  }\n\n  handleClick(index) {\n    // So I can access blog and title outside of the map.\n    this.setState({isToggled: !this.state.isToggled, title: this.state.posts[index].title, blog: this.state.posts[index].blog});\n  }\n\n  render() {\n\n    const posts = this.state.posts?.map((post, index) =>(\n      <li key={index}>\n          <h1 data-value={index} onClick={() => this.handleClick(index)}>{post.title}</h1>\n      </li>\n    ));\n    return(\n      // It works, but you need to click to hide it first.\n      <>\n        {\n          // Toggles the post.\n          this.state.isToggled\n          ?\n          <ul>\n            <li>\n            <h1>{this.state.title}</h1>\n            <p>{this.state.blog}</p>\n            </li>\n          </ul>\n          :\n          null\n        }\n        <ul>\n            {posts}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}